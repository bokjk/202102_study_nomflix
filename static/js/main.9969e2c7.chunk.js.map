{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Loader.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","reportWebVitals.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","Slink","Link","withRouter","className","location","pathname","to","Container","div","Loader","Title","Grid","Section","title","children","Text","span","color","Message","text","Rating","Image","bgUrl","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","default","length","substring","protoTypes","PropTypes","number","isRequired","string","bool","HomePresenter","nowPlaying","upComming","popular","error","loading","Helmet","map","movie","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","tvApi","HomeContainer","state","upcoming","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","TV","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","updateTerm","handleSubmit","onSubmit","type","placeholder","value","onChange","res","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","path","exact","component","Home","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9969e2c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display : flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  transition: border-bottom 0.25s ease-in-out;\r\n  border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\" }\r\n`;\r\n\r\nconst Slink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\nexport default withRouter (props => {\r\n  // console.log(`props`, props);\r\n  return (\r\n    <Header className='nav'>\r\n      <List>\r\n        <Item current={props.location.pathname === '/'}>\r\n          <Slink to='/'>Movies</Slink>\r\n        </Item>\r\n        <Item current={props.location.pathname === '/tv'}>\r\n          <Slink to='/tv'>TV</Slink>\r\n        </Item>\r\n        <Item current={props.location.pathname === '/search'}>\r\n          <Slink to='/search'>Search</Slink>\r\n        </Item>\r\n      </List>\r\n    </Header>\r\n  )\r\n})\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display : flex;\r\n  justify-content : center;\r\n  align-items : center;\r\n  width : 100vw;\r\n  height : 100vh;\r\n  font-size : 28px;\r\n`;\r\n\r\nconst Loader = () => <Container>😁</Container>\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport styled from 'styled-components'; \r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom:50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 14px;\r\n  font-weight : bold;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top : 25px;\r\n  display : grid;\r\n  grid-template-columns : repeat(auto-fill, 125px);\r\n  grid-gap : 25px;\r\n`;\r\n\r\nconst Section = ({title, children}) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title : PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from 'prop-types'; // 타입스트립트처럼 타입을 체크해줌\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from 'prop-types'; // 타입스트립트처럼 타입을 체크해줌\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  height : 180px;\r\n  background-image : url(${props => props.bgUrl});\r\n  background-size : cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst Title = styled.div`\r\n  margin-bottom : 3px;\r\n`;\r\n\r\nconst Year = styled.div`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie=false }) => {\r\n  // console.log(`===>`, require('../assets/noPosterSmall.png'));\r\n  return(\r\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n      <Container>\r\n        <ImageContainer>\r\n          <Image bgUrl={\r\n            imageUrl\r\n            ? `https://image.tmdb.org/t/p/w200${imageUrl}`\r\n            : require('../assets/noPosterSmall.png').default\r\n            }></Image>\r\n          <Rating> ⭐{rating}/10 </Rating>\r\n        </ImageContainer>\r\n        <Title title={title}>\r\n          {title.length > 13 ? `${title.substring(0, 10)}...` : title}\r\n        </Title>\r\n        <Year>{year}</Year>\r\n      </Container>\r\n    </Link>\r\n  )};\r\n\r\nPoster.protoTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl : PropTypes.string,\r\n  title : PropTypes.string.isRequired,\r\n  rating : PropTypes.number,\r\n  year : PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from 'prop-types'; // 타입스트립트처럼 타입을 체크해줌\r\nimport styled from 'styled-components';\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Loader from 'Components/Loader';\r\nimport Section from 'Components/Section';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComming, popular, error, loading }) =>\r\nloading ? (\r\n  <>\r\n    <Helmet>\r\n      <title>Loading | Jangflix</title>\r\n    </Helmet>\r\n    <Loader />\r\n  </>\r\n  ) :\r\n  <Container>\r\n    { nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title = {movie.title}\r\n              rating = {movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie = {true}\r\n            >\r\n              {movie.title}\r\n            </Poster>\r\n          ))\r\n          }\r\n        </Section>\r\n    )}\r\n    { upComming && upComming.length > 0 && (\r\n        <Section title=\"UpComming\">\r\n          {upComming.map(movie => ( \r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title = {movie.title}\r\n              rating = {movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie = {true}\r\n            >\r\n              {movie.title}\r\n            </Poster>\r\n          ))}\r\n        </Section>\r\n    )} \r\n    { popular && popular.length > 0 && (\r\n        <Section title=\"Popular\">\r\n          {popular.map(movie => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title = {movie.title}\r\n              rating = {movie.vote_average}\r\n              year={movie.release_date.substring(0, 4)}\r\n              isMovie = {true}\r\n            >\r\n              {movie.title}\r\n            </Poster>\r\n          ))}\r\n        </Section>\r\n    )}\r\n    {error && <Message color=\"#e74c3c\" text={error} />}\r\n  </Container>;\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying : PropTypes.array,\r\n  upComming : PropTypes.array,\r\n  popular : PropTypes.array,\r\n  loading : PropTypes.bool.isRequired,\r\n  error : PropTypes.string \r\n}\r\n\r\n\r\nexport default HomePresenter; ","import axios from 'axios';\r\n\r\n// 반복되는 호출부분 초기 세팅 https://github.com/axios/axios#instance-methods\r\nconst api = axios.create({\r\n  baseURL : 'https://api.themoviedb.org/3/',\r\n  params : {\r\n    api_key : 'a7bb6992bd0f00b20baf1973cb6a2e8c',\r\n    language : 'ko-KR'\r\n  }\r\n})\r\n\r\n// append_to_response: \"videos\" => 예고편, 관련영상들의 리스트를 가져옴\r\nexport const moviesApi = {\r\n  nowPlaying : () => api.get('movie/now_playing'),\r\n  upComing   : () => api.get('movie/upcoming'),\r\n  topRated   : () => api.get('movie/top_rated'),\r\n  popular    : () => api.get('movie/popular'),\r\n  movieDetail: (id) => api.get(`movie/${id}`, {\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search     : (term) => api.get('search/movie', {\r\n    params : {\r\n      query : term\r\n    }\r\n  })\r\n}\r\n\r\nexport const tvApi = {\r\n  topRated   : () => api.get('tv/top_rated'),\r\n  popular    : () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail : (id) => api.get(`tv/${id}`, {\r\n    params: {\r\n      append_to_response: \"videos\"\r\n    }\r\n  }),\r\n  search     : (term) => api.get(`search/tv`, {\r\n    params : {\r\n      query : term\r\n    }\r\n  })\r\n}\r\n\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;","import React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { moviesApi } from '../../api';\r\n\r\nexport default class HomeContainer extends React.Component {\r\n  state = {\r\n    nowPlaying : null,\r\n    upcoming : null,\r\n    popular : null,\r\n    error : null,\r\n    loading : true,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try{\r\n      /* api에서 호출 된 data : { results : []} 의 값을 nowPlaying 의 이름으로 저장함\r\n        만약 뒤에 : nowPlaying를 적지 않는다면 results 의 이름으로 저장됨\r\n      */\r\n      const { data : { results: nowPlaying } } = await moviesApi.nowPlaying();\r\n      const { data : { results : upComming} } = await moviesApi.upComing();\r\n      const { data : { results : popular} } = await moviesApi.popular();\r\n      // throw Error();\r\n      this.setState({ nowPlaying, upComming, popular })\r\n    } catch {\r\n      this.setState({ error : \"Can't find Movie infomation\"  })\r\n    } finally {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComming, popular, error, loading} = this.state;\r\n    return (\r\n      <HomePresenter \r\n        nowPlaying={nowPlaying}\r\n        upComming={upComming}\r\n        popular={popular}\r\n        error = {error}\r\n        loading = {loading}\r\n      />\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'; // 타입스트립트처럼 타입을 체크해줌\r\nimport styled from 'styled-components';\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Loader from 'Components/Loader';\r\nimport Section from 'Components/Section';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => \r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Jangflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n    ) :\r\n    <Container>\r\n      {\r\n        topRated && topRated.length > 0 && (\r\n          <Section title='Top Rated'>\r\n            { topRated.map(TV => (\r\n            <Poster\r\n              key={TV.id}\r\n              id={TV.id}\r\n              imageUrl={TV.poster_path}\r\n              title = {TV.name}\r\n              rating = {TV.vote_average}\r\n              year={TV.first_air_date.substring(0, 4)}\r\n              isMovie = {false}\r\n            >\r\n              {TV.name}\r\n            </Poster>\r\n            )) }\r\n          </Section>\r\n        )\r\n      }\r\n      {\r\n        popular && popular.length > 0 && (\r\n          <Section title='Popular'>\r\n            { popular.map(TV => (\r\n            <Poster\r\n              key={TV.id}\r\n              id={TV.id}\r\n              imageUrl={TV.poster_path}\r\n              title = {TV.name}\r\n              rating = {TV.vote_average}\r\n              year={TV.first_air_date.substring(0, 4)}\r\n              isMovie = {false}\r\n            >\r\n              {TV.name}\r\n            </Poster>\r\n            )) }\r\n          </Section>\r\n        )\r\n      }\r\n      {\r\n        airingToday && airingToday.length > 0 && (\r\n          <Section title='Airing Today'>\r\n            { airingToday.map(TV => (\r\n            <Poster\r\n              key={TV.id}\r\n              id={TV.id}\r\n              imageUrl={TV.poster_path}\r\n              title = {TV.name}\r\n              rating = {TV.vote_average}\r\n              year={TV.first_air_date.substring(0, 4)}\r\n              isMovie = {false}\r\n            >\r\n              {TV.name}\r\n            </Poster>\r\n            )) }\r\n          </Section>\r\n        )\r\n      }\r\n\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n; \r\n\r\nTVPresenter.propTypes = {\r\n  topRated : PropTypes.array,\r\n  popular : PropTypes.array,\r\n  airingToday : PropTypes.array,\r\n  loading : PropTypes.bool.isRequired,\r\n  error : PropTypes.string\r\n}\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;","import React from 'react';\r\nimport TVPresenter from './TVPresenter';\r\nimport { tvApi } from '../../api';\r\n\r\nexport default class TVContainer extends React.Component {\r\n\r\n  state = {\r\n    topRated : null,\r\n    popular : null,\r\n    airingToday : null,\r\n    error : null,\r\n    loading : true,\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    try {\r\n\r\n      const { data : { results : topRated }} = await tvApi.topRated();\r\n      const { data : { results : popular }} = await tvApi.popular();\r\n      const { data : { results : airingToday }} = await tvApi.airingToday();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      })\r\n    } catch {\r\n      this.setState({ error : \"Can't find tv infomation\"  })\r\n    } finally {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return ( \r\n      <TVPresenter \r\n        topRated = {topRated}\r\n        popular = {popular}\r\n        airingToday = {airingToday}\r\n        error = {error}\r\n        loading = {loading}\r\n      />\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types'; // 타입스트립트처럼 타입을 체크해줌\r\nimport styled from 'styled-components';\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Loader from 'Components/Loader';\r\nimport Section from 'Components/Section';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom : 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width : 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({ movieResult, tvResult, searchTerm, updateTerm, handleSubmit, error, loading }) => \r\n  <Container>\r\n    <Helmet>\r\n      <title>Loading | Jangflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input type='text' placeholder='Search Movies or TV Shows..' value={searchTerm} onChange={updateTerm}></Input>\r\n    </Form>\r\n    { loading ? <Loader/> : (\r\n      <>\r\n        {\r\n          movieResult && movieResult.length > 0 && (\r\n            <Section title='Moves Result'>\r\n              {movieResult.map( res => (\r\n                <Poster\r\n                  key={res.id}\r\n                  id={res.id}\r\n                  imageUrl={res.poster_path}\r\n                  title = {res.title}\r\n                  rating = {res.vote_average}\r\n                  year={res.release_date.substring(0, 4)}\r\n                  res = {true}\r\n                >\r\n                  {res.title}\r\n                </Poster>\r\n              )) }\r\n            </Section>\r\n          )\r\n        }\r\n        {\r\n          tvResult && tvResult.length > 0 && (\r\n            <Section title='TV Result'>\r\n              {tvResult.map( res => (\r\n                <Poster\r\n                  key={res.id}\r\n                  id={res.id}\r\n                  imageUrl={res.poster_path}\r\n                  title = {res.name}\r\n                  rating = {res.vote_average}\r\n                  year={res.first_air_date.substring(0, 4)}\r\n                  res = {false}\r\n                >\r\n                  {res.title}\r\n                </Poster>\r\n              )) }\r\n            </Section>\r\n          )\r\n        }\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        { movieResult && \r\n          tvResult && \r\n          movieResult.length === 0 && \r\n          tvResult.length === 0 && (\r\n          <Message color='#95a5a6' text='Nothing found' /> \r\n          )}\r\n      </>\r\n    )}\r\n\r\n    \r\n  </Container>;\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResult : PropTypes.array,\r\n  tvResult : PropTypes.array,\r\n  searchTerm : PropTypes.string,\r\n  loading : PropTypes.bool.isRequired,\r\n  error : PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport { moviesApi, tvApi } from '../../api';\r\n\r\nexport default class SearchContainer extends React.Component {\r\n\r\n  state = {\r\n    movieResult : null,\r\n    tvResult : null,\r\n    searchTerm : '',\r\n    error : null,\r\n    loading : false,\r\n  }\r\n\r\n  // async componentDidMount() {\r\n    // const a = await moviesApi.search('tiger');\r\n    // console.log(`a`, a);\r\n  // }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { searchTerm } = this.state;\r\n    if(searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  }\r\n\r\n  updateTerm = (event) => {\r\n    const { target : { value } }  = event;\r\n    this.setState({\r\n      searchTerm : value\r\n    })\r\n  }\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({loading : true})\r\n\r\n    try {\r\n      const {data : { results : movieResult }} = await moviesApi.search(searchTerm);\r\n      const {data : { results : tvResult }} = await tvApi.search(searchTerm);\r\n      this.setState({movieResult, tvResult })\r\n    } catch {\r\n      this.setState({ error : \"Can't find results\"  })\r\n    } finally {\r\n      this.setState({ loading: false })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const {movieResult, tvResult, searchTerm, error, loading} = this.state;\r\n    return (\r\n      <SearchPresenter \r\n        movieResult={movieResult}\r\n        tvResult={tvResult}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit = {this.handleSubmit}\r\n        updateTerm = { this.updateTerm }\r\n      />\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types'; // 타입스트립트처럼 타입을 체크해줌\r\nimport styled from 'styled-components';\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Loader from 'Components/Loader';\r\nimport Message from \"Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left:0;\r\n  width : 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) => {\r\n\r\n  if(!result) return <Loader/>\r\n  // console.log(`DetailPresenter result`, result);\r\n  return (\r\n    loading\r\n    ? (\r\n        <>\r\n          <Loader/>\r\n          <Helmet>\r\n            <title>Loading | Jangflix</title>\r\n          </Helmet>\r\n        </>\r\n      )\r\n    : (\r\n\r\n      error ? <Message color=\"#e74c3c\" text={error} /> :\r\n      <Container>\r\n\r\n        <Helmet>\r\n          <title>\r\n            {result.title ? result.title : result.name}{ \" \" } | Jangflex\r\n          </title>\r\n        </Helmet>\r\n\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover\r\n            bgImage={\r\n              result \r\n              ? `https://image.tmdb.org/t/p/original/${result.poster_path}`\r\n              : require('../../assets/noPosterSmall.png').default\r\n            }\r\n          />\r\n          <Data>\r\n            <Title>\r\n            {result.title\r\n              ? result.title\r\n              : result.name}\r\n            </Title>\r\n            <ItemContainer>\r\n              <Item>\r\n                {result.release_date\r\n                  ? result.release_date.substring(0, 4)\r\n                  : result.first_air_date.substring(0, 4)}\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                {result.genres &&\r\n                  result.genres.map((genre, index) =>\r\n                    index === result.genres.length - 1\r\n                      ? genre.name\r\n                      : `${genre.name} / `\r\n                  )}\r\n              </Item>\r\n            </ItemContainer>\r\n            <Overview>{result.overview}</Overview>\r\n          </Data>\r\n        </Content>\r\n      </Container>\r\n    )\r\n  )\r\n  \r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result : PropTypes.object,\r\n  loading : PropTypes.bool.isRequired,\r\n  error : PropTypes.string\r\n}\r\n\r\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;","import React from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\nimport { moviesApi, tvApi } from '../../api';\r\n\r\nexport default class DetailContainer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { location : { pathname } } = props;\r\n\r\n    this.state = {\r\n      result: null,\r\n      error : null,\r\n      loading : false,\r\n      isMovie : pathname.includes('/movie/')\r\n    };\r\n  }\r\n\r\n\r\n\r\n  async componentDidMount() {\r\n    \r\n    const { \r\n      match : { params : { id } },\r\n      history : { push },\r\n    } = this.props;\r\n    const parseId = parseInt(id);\r\n    const { isMovie } = this.state;\r\n    if( isNaN(parseId) ) {\r\n      return push(\"/\");\r\n    }\r\n    // console.log(`detail-isMovie`, isMovie);\r\n\r\n    let result = null;\r\n\r\n    \r\n    try {\r\n      if(isMovie) {\r\n        ({ data : result } = await moviesApi.movieDetail(parseId));\r\n      } else {\r\n        ({ data : result } = await tvApi.showDetail(parseId));\r\n      }\r\n      // console.log(`result`, result);\r\n    } catch {\r\n      this.setState({ error : \"Can't find detail\"  })\r\n    } finally {\r\n      this.setState({ loading: false, result })\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    // console.log(this.props);\r\n    // console.log(`detail-result`, result);\r\n\r\n    return (\r\n      <DetailPresenter \r\n        result = {result}\r\n        error = {error}\r\n        loading = {loading}\r\n      />\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import {HashRouter as Router, Route} from \"react-router-dom\";\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\n\r\nimport Header from 'Components/Header';\r\n\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\n\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n    <Router>\r\n        <Header />\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path=\"/tv\" exact component={TV}/>\r\n            <Route path=\"/search\" component={Search}/>\r\n            <Route path=\"/movie/:id\" component={Detail} />\r\n            <Route path=\"/tv/:id\" component={Detail} />\r\n\r\n            <Redirect from='*' to='/' />\r\n        </Switch>\r\n    </Router>\r\n);\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body{\r\n    font-size:12px;\r\n    background-color:rgba(20, 20, 20, 1);\r\n    color:white;\r\n    padding-top:50px;\r\n  }\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n  input, button {\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n  }\r\n  h1, h2, h3, h4, h5, h6{\r\n    font-family:'Maven Pro', sans-serif;\r\n  }\r\n  ol, ul, li {\r\n    list-style: none;\r\n  }\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;","import React from 'react';\n\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\n\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}